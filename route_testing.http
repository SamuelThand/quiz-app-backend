@server = http://localhost
@port = 3000
@url = {{server}}:{{port}}

###############################################

// Test: Get blablabla
// Expected HTTP response status code: 200
// Expected response: an object (json) with an array with all courses (including subject for each course)
// [{}, {}, ...]
GET {{url}}/testing

###############################################

// Test: Get questions
// Expected HTTP response status code: 200
// Expected response: an object (json) with an array with all questions
// [{}, {}, ...]
GET {{url}}/questions

###############################################

# // Test: Get question by name
# // Expected HTTP response status code: 200
# // Expected response: an object (json) with a questions
# GET {{url}}/questions/Swedish question #1

###############################################

// Test: Get question by id
// Expected HTTP response status code: 200
// Expected response:
# {
#   "_id": "63ad827e9d82971b6593a00f",
#   "creator": "Admin",
#   "name": "Swedish question #1",
#   "question": "Vad heter Sveriges huvudstad?",
#   ...
GET {{url}}/questions/63ad827e9d82971b6593a00f

###############################################

// Test: Get question by id
// Expected HTTP response status code: 404
// Expected response: Something that says that the question was not found
GET {{url}}/questions/63ad827e9d82971b6594a00f

###############################################

// Test: Add question
// Expected HTTP response status code: 200
// Expected response:
# {
#   "creator": "63af18d1fb461af8dc235cc6",
#   "name": "test",
#   "question": "test",
#   "option1": "test",
#   ...
POST {{url}}/questions HTTP/1.1
Content-Type: application/json

{
  "creator": "63af18d1fb461af8dc235cc6",
  "name": "test",
  "question": "test",
  "option1": "test",
  "optionX": "test",
  "option2": "test",
  "correctOption": "test",
  "level": 1,
  "subject": ["63aee215b2c2038cfd5bd853"],
  "language": "test"
}

###############################################

// Test: Update question
// Expected HTTP response status code: 202
// 
PUT {{url}}/questions/63ad827e9d8291b6593a00f HTTP/1.1
Content-Type: application/json

{
  "creator": "63af18d1fb461af8dc235cc6",
  "name": "test",
  "question": "testa",
  "option1": "test",
  "optionX": "test",
  "option2": "test",
  "correctOption": "test",
  "level": 1,
  "subject": ["63aee215b2c2038cfd5bd853"],
  "language": "test"
}

###############################################

// Test: Delete the test question
// Expected HTTP response status code: 200 OR 404
// Expected response: an object (json) with a questions
#   ...
#   "creator": "test",
#   "name": "test",
#   "question": "test",
#   "option1": "test",
#   ...
DELETE {{url}}/questions/test

###############################################

// Test: Get subjects
// Expected HTTP response status code: 200 OR 404 if no subjects
// Expected response: an object (json) with an array with all subjects
// [{}, {}, ...]
GET {{url}}/subjects

###############################################

// Test: Get subject by subjectCode
// Expected HTTP response status code: 200
// Expected response: an object (json) with a subject of economics
GET {{url}}/subjects/ECO

###############################################

// Test: Get subject by not existing subjectCode
// Expected HTTP response status code: 404
// Expected response: message that the subject was not found
GET {{url}}/subjects/non

###############################################

// Test: Add subject
// Expected HTTP response status code: 201 OR 409
// Expected response: an object (json) with a subject of economics
POST {{url}}/subjects HTTP/1.1
Content-Type: application/json

{
  "name": "sports",
  "subjectCode": "spo",
  "description": "Sports are physical activities or games played for competition. They often involve skill and strategy, and can be played at various levels. Some examples include soccer, basketball, and football. People participate in sports to stay active and healthy, or for entertainment as spectators."
}

###############################################

// Test: Delete subject
// Expected HTTP response status code: 200 OR 404
// Expected response: an object (json) with a subject of economics
DELETE {{url}}/subjects/TES

###############################################

// Test: Get all quizzes
// Expected HTTP response status code: 200 OR 404 if no quizzes
// Expected response: an object (json) with an array with all quizzes
// [{}, {}, ...]
GET {{url}}/quizzes

###############################################

// Test: Get quiz by name
// Expected HTTP response status code: 200
// Expected response: an object (json) with a quiz
GET {{url}}/quizzes/QuizTest

###############################################

// Test: Get quiz by id
// Expected HTTP response status code: 200 OR 404 - no quiz with that id OR 400 - Wrong id format
// Expected response: an object (json) with a quiz
GET {{url}}/quizzes/63b69c8e5bcbb25bac17dd95

###############################################

// Test: add quiz
// Expected HTTP response status code: 201 OR 409
// Expected response: an object (json) with a quiz
POST {{url}}/quizzes HTTP/1.1
Content-Type: application/json

{
  "name": "QuizTest",
  "creator": "63af18d1fb461af8dc235cc6",
  "questions": [
    "63ad827e9d82971b6593a00f",
    "63ad827e9d82971b6593a010",
    "63ad827e9d82971b6593a011",
    "63ad827e9d82971b6593a012",
    "63ad827e9d82971b6593a013"
    ]
}

###############################################

// Test: Update a quiz
// Expected HTTP response status code: 201 OR 409
// Expected response: an object (json) with a quiz
PUT {{url}}/quizzes/63af0790b49fec7db98b3f19 HTTP/1.1
Content-Type: application/json

{
  "name": "QuizTest",
  "creator": "63af18d1fb461af8dc235cc6",
  "questions": [
    "63ad827e9d82971b6593a00f",
    "63ad827e9d82971b6593a010",
    "63ad827e9d82971b6593a011",
    "63ad827e9d82971b6593a012",
    "63ad827e9d82971b6593a013"
    ]
}

###############################################

// Test: delete quiz
// Expected HTTP response status code: 200 OR 404
// Expected response: an object (json) with a quiz
DELETE {{url}}/quizzes/63b83a95fa93d57712348022

###############################################

// Test: Get admins
// Expected HTTP response status code: 200 OR 404 if no admins
// Expected response: an object (json) with an array with all admins
// [{}, {}, ...]
GET {{url}}/admins

###############################################

// Test: Get admin by username
// Expected HTTP response status code: 200
// Expected response: an object (json)
GET {{url}}/admins/Admin1

###############################################

// Test: Get admin by not existing admin
// Expected HTTP response status code: 404
// Expected response: message that the admin was not found
GET {{url}}/admins/non

###############################################

// Test: Add admin
// Expected HTTP response status code: 201 OR 409
// Expected response: recently added admin
POST {{url}}/admins HTTP/1.1
Content-Type: application/json

{
  "firstName": "Test",
  "lastName": "Testsson",
  "userName": "Admin1",
  "password": "Test123"
}

###############################################

// Test: Add faulty admin
// Expected response code: 400
POST {{url}}/admins HTTP/1.1
Content-Type: application/json

{
  "firstName": "Test1",
  "lastName": "Testsson1",
  "userName": "Admin1",
  "password": "Test123"
}

###############################################

// Test: Update faulty admin
// Expected response code: 400
PUT {{url}}/admins/Admin1 HTTP/1.1
Content-Type: application/json

{
  "firstName": "",
  "lastName": "Testsson",
  "userName": "Admin1",
  "password": "Test123"
}

###############################################
// Test: Sign in with admin
POST {{url}}/admins/signin HTTP/1.1
Content-Type: application/json

{
  "username": "Admin1",
  "password": "Test123"
}

###############################################

// Test: Get Subjects
GET {{url}}/subjects/

###############################################

// Test: Get a subject
GET {{url}}/subjects/MAT

###############################################

// Test: Post a subject
POST {{url}}/subjects/
Content-Type: application/json

{
  "name": "aefaefaef",
  "subjectCode": "SEX",
  "description": "aefaefaefaef"
}

###############################################

// Test: Delete a subject
PUT {{url}}/subjects/
Content-Type: application/json

{
  "name": "aefaefaef",
  "subjectCode": "SzX",
  "description": "aefaefaefaef"
}

###############################################

// Test: Delete a subject
DELETE {{url}}/subjects/SEXa
Content-Type: application/json

